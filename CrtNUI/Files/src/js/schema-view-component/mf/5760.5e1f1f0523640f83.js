(self.webpackChunkapp_studio_enterprise_schema_view=self.webpackChunkapp_studio_enterprise_schema_view||[]).push([[5760],{88128:(Fe,w,i)=>{i.r(w),i.d(w,{FolderTreeActiveFolderChangedHandler:()=>g,FolderTreeAddFolderDataHandler:()=>_,FolderTreeConvertToStaticFolderHandler:()=>S,FolderTreeCopyFolderDataHandler:()=>y,FolderTreeDeleteFolderDataHandler:()=>A,FolderTreeExpandedItemsHandler:()=>I,FolderTreeModule:()=>T,FolderTreeRenameHandler:()=>R,FolderTreeToggleFolderFavoriteHandler:()=>M,FolderTreeUpdateFiltersHandler:()=>D,FolderTreeVisibleHandler:()=>O});var d=i(74742),j=i(31134),a=i(75378),V=i(33177),u=i(34038),m=i(8239),p=i(49475),U=i(52045),N=i(97600),l=i(21322);let g=class extends a.BaseRequestHandler{constructor(e,t){super(),this._folderTreeUserProfileService=e,this._schemaPartsService=t}_isNeedSaveToProfile(e){const t=e.$context,{activeFolderIdAttrName:r}=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),o=this._prepareFolderId(t.attributes[r]),n=this._prepareFolderId(e.id);return o!==n}_prepareFolderId(e){return e||""}_clearRelatedDataGridCollection(e,t,r){const o={type:"crt.DataGridClearCollectionsForChangedDesignSettingsRequest",$context:r.$context,dataGridName:e,scopes:r.scopes,previousDesignSetting:t?.previous,currentDesignSetting:t?.current};return this.handlerChain.process(o)}_setDataGridActiveFolderSettingsAttribute(e,t,r){const o=(0,u.createDataGridActiveFolderSettingsAttributeName)({name:e});return r.set(o,t)}_getChangedDataGridActiveFolderSettings(e){var t=this;return(0,m.Z)(function*(){const r={$context:e.$context,folderTreeName:e.folderTreeName,type:"crt.DataGridCheckActiveFolderSettingsChangesRequest",scopes:e.scopes,folderId:e.folderTreeId};return yield t.handlerChain.process(r)})()}_applyNewRelatedDataGridColumns(e,t){var r=this;return(0,m.Z)(function*(){yield Promise.all(Object.entries(t).map(function(){var o=(0,m.Z)(function*([n,h]){yield r._clearRelatedDataGridCollection(n,h,e),yield r._setDataGridActiveFolderSettingsAttribute(n,h.current,e.$context)});return function(n){return o.apply(this,arguments)}}())),yield r._schemaPartsService.commit({silent:!1})})()}_updateViewModel(e){const t=e.$context,r=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName);return(0,l.lastValueFrom)(t.setValue({[e.activeFolderIdAttrName??r.activeFolderIdAttrName]:e.id,[r.activeFolderFolderTreeIdAttrName]:e.folderTreeId,[e.activeFolderNameAttrName??r.activeFolderNameAttrName]:e.name,[e.activeFolderFavoriteStateAttrName??r.activeFolderFavoriteStateAttrName]:e.isFavorite}),{defaultValue:null})}handle(e){var t=this;return(0,m.Z)(function*(){t._isNeedSaveToProfile(e)&&(yield t._folderTreeUserProfileService.setFolderTreeSelectedNode({folderTreeName:e.folderTreeName,id:e.id,activeFolderFolderTreeId:e.folderTreeId,isFavorite:e.isFavorite}));const r=yield t._getChangedDataGridActiveFolderSettings(e);return(0,N.isEmpty)(r)?t._updateViewModel(e):(yield t._updateViewModel(e),t._applyNewRelatedDataGridColumns(e,r))})()}};g=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeActiveFolderChangedHandler",requestType:"crt.FolderTreeActiveFolderChangedRequest"}),(0,d.__metadata)("design:paramtypes",[u.FolderTreeUserProfileService,U.SchemaPartsService])],g);var s=i(94450),v=i(27049),C=i(24709),J=i(2876),L=i(77207);class F{constructor(){this._userInfo=(0,s.inject)(p.UserInfo),this._featureValues=(0,s.inject)(p.FEATURE_VALUES),this._httpClient=(0,s.inject)(J.HttpClient),this._translateService=(0,s.inject)(L.TranslateService),this._serviceEndpoint=(this._userInfo.isSSP?"ssp/":"")+"rest/FolderManagerService/"}_asyncConvert(e){return this._callService("ConvertToStaticFolder",{newFolderId:e.newFolderId,parentFolderId:e.parentFolderId,entitySchemaName:e.rootSchemaName}).pipe((0,l.map)(t=>(t?.success&&(t.additionalNotification=this._translateService.instant("StaticFolderConvertor.AsyncConvertMessage")),t)))}_convert(e){return this._callService("ConvertFolder",{newFolderId:e.newFolderId,parentFolderId:e.parentFolderId,entitySchemaName:e.rootSchemaName}).pipe((0,l.map)(t=>((0,N.isEmpty)(t)&&(t={success:!0}),t)))}_deleteFolders(e){return this._callService("DeleteFolder",{sourceSchemaName:e.sourceSchemaName,records:e.folderIds})}_callService(e,t){const r=`${this._serviceEndpoint}${e}`,o=`${e}Result`;return this._httpClient.post(r,t).pipe((0,l.map)(n=>this._getServiceResultFromResponse(n,o)),(0,l.catchError)(n=>this._catchHttpErrorResponse(n)))}_getServiceResultFromResponse(e,t){return t in(e||{})?e[t]:e}_catchHttpErrorResponse(e){return(0,l.of)({success:!1,errorInfo:{message:e.error?.errorInfo?.message??e.message}})}convertToStatic(e){return this._featureValues.ConvertDynamicToStaticFolderByChunk?this._asyncConvert(e):this._convert(e)}deleteFolders(e){return this._deleteFolders(e)}}F.\u0275fac=function(e){return new(e||F)},F.\u0275prov=s.\u0275\u0275defineInjectable({token:F,factory:F.\u0275fac});var b=i(99293);class f{constructor(e,t){this._ngZone=e,this._dialogService=t}_reloadMainDs(e,t){const r=e.getBoundDataSourceNameByAttributePath(t.itemsAttrName);return e.load(r,[],{loadType:a.DataSourceLoadType.Reload})}_reloadFavoritesDs(e,t){const r=e.$context;if(e.reloadFavorites){const o=r.getBoundDataSourceNameByAttributePath(t.favoriteItemsAttrName);return r.load(o,[],{loadType:a.DataSourceLoadType.Reload})}return(0,l.of)({})}_getErrorMessage(e){const t=e.errorInfo;return e.message||((0,N.isString)(t)?t:t.message)}handle(e,t,r){const o=t.$context,n=(0,p.buildFolderTreeAttributeNames)(t.folderTreeName);return(0,l.lastValueFrom)(e.pipe((0,v.mergeMap)(()=>(0,l.concat)([this._reloadMainDs(o,n),this._reloadFavoritesDs(t,n)])),(0,v.concatAll)(),(0,v.catchError)(h=>this.handleError(h,t,r))),{defaultValue:null})}handleError(e,t,r){var o=this;const n=t.$context,h=(0,p.buildFolderTreeAttributeNames)(t.folderTreeName),E=this._getErrorMessage(e);return this._ngZone.run(()=>this._dialogService.openInfoDialog(E)).subscribe({next:function(){var H=(0,m.Z)(function*(){yield r?.process({type:"crt.FolderTreeActiveFolderChangedRequest",folderTreeName:t.folderTreeName,$context:t.$context}),yield(0,l.lastValueFrom)(o._reloadMainDs(n,h),{defaultValue:null}),yield(0,l.lastValueFrom)(o._reloadFavoritesDs(t,h),{defaultValue:null})});return function(){return H.apply(this,arguments)}}()}),(0,l.of)({})}}f.\u0275fac=function(e){return new(e||f)(s.\u0275\u0275inject(s.NgZone),s.\u0275\u0275inject(b.DialogService))},f.\u0275prov=s.\u0275\u0275defineInjectable({token:f,factory:f.\u0275fac,providedIn:"any"});class x extends a.BaseRequestHandler{constructor(e){super(),this.modelRequestService=e.get(f)}insertModel(e){return C.Model.create(e.sourceSchemaName).pipe((0,l.switchMap)(t=>{let r={Id:e.folderId,Name:e.folderName,Parent:e.parentId};return(0,u.isOldSourceSchema)(e.sourceSchemaName)?r={...r,FolderType:e.folderTypeId||u.DYNAMIC_FOLDER_TYPE_ID,SearchData:e.filterData}:r={...r,EntitySchemaName:e.rootSchemaName,FilterData:e.filterData},t.insert(r)}))}}let _=class extends x{constructor(e){super(e)}handle(e){var t=this;return(0,m.Z)(function*(){const r=e.$context,o=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName).itemsAttrName,n=r.getBoundDataSourceNameByAttributePath(o);return(0,l.lastValueFrom)(t.insertModel(e).pipe((0,v.switchMap)(()=>r.load(n,[],{loadType:a.DataSourceLoadType.Reload})),(0,v.catchError)(h=>t.modelRequestService.handleError(h,e,t.handlerChain))),{defaultValue:null})})()}};_.\u0275fac=function(e){return new(e||_)(s.\u0275\u0275inject(s.Injector))},_.\u0275prov=s.\u0275\u0275defineInjectable({token:_,factory:_.\u0275fac,providedIn:"any"}),_=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeAddFolderDataHandler",requestType:"crt.AddFolderDataRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],_);let S=class extends a.BaseRequestHandler{constructor(e,t,r){super(),this._folderManagerService=e,this._notifyService=t,this._maskService=r}_addNewFolder(e){return this.handlerChain.process({...e,type:"crt.AddFolderDataRequest"})}_isAddFolderResultFailed(e){return(0,N.isObject)(e)&&!e.rowsAffected||!(0,N.isObject)(e)&&e!==null}_convert(e){return this._showLoadingMask(e),(0,l.lastValueFrom)(this._folderManagerService.convertToStatic({newFolderId:e.folderId,parentFolderId:e.parentId,rootSchemaName:e.rootSchemaName}).pipe((0,l.tap)(()=>this._hideLoadingMask(e))))}_showLoadingMask(e){this._maskService.showMask(this._getTaskName(e.rootSchemaName),e.$context)}_hideLoadingMask(e){this._maskService.hideMask(this._getTaskName(e.rootSchemaName),e.$context)}_getTaskName(e){return`ConvertToStaticFolder_${e}`}_notify(e){let t="";if(e.success&&e.additionalNotification)t=e.additionalNotification;else if(!e.success)t=e.errorInfo?.message;else return;this._notifyService.show({message:t,translate:!1})}_refreshDataSource(e){return(0,m.Z)(function*(){const t=e.$context,r=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),o=t.getBoundDataSourceNameByAttributePath(r.itemsAttrName);yield(0,l.lastValueFrom)(t.load(o,[],{loadType:a.DataSourceLoadType.Reload}))})()}handle(e){var t=this;return(0,m.Z)(function*(){const r=yield t._addNewFolder(e);if(t._isAddFolderResultFailed(r))return;const o=yield t._convert(e);return t._notify(o),yield t._refreshDataSource(e),o})()}};S.\u0275fac=function(e){return new(e||S)(s.\u0275\u0275inject(F),s.\u0275\u0275inject(b.NotifyService),s.\u0275\u0275inject(a.MaskService))},S.\u0275prov=s.\u0275\u0275defineInjectable({token:S,factory:S.\u0275fac}),S=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeConvertToStaticFolderHandler",requestType:"crt.ConvertToStaticFolderRequest"}),(0,d.__param)(2,(0,a.CrtInject)(p.DEVKIT_MASK_SERVICE)),(0,d.__metadata)("design:paramtypes",[F,b.NotifyService,a.MaskService])],S);var P=i(41307);let y=class extends x{constructor(e){super(e),this._rightsService=e.get(P.RightsService),this._folderTreeRelatedElementConfigsRepository=e.get(P.FolderTreeRelatedElementConfigsRepository),this._featureValues=e.get(p.FEATURE_VALUES)}_copyRelatedElementConfigs(e,t){return!t||this._featureValues.DisableDataGridSettingsByFolders?(0,l.of)({success:!1}):this._folderTreeRelatedElementConfigsRepository.copy(e,t)}_copyRights(e){return!e.copyRights||!e.folderId?(0,l.of)({}):this._rightsService.copyRights({schemaName:e.sourceSchemaName,sourceId:e.sourceId,targetId:e.folderId,options:{overwrite:!1}})}_reloadFolderDataSource(e){const t=e.$context,r=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName).itemsAttrName,o=t.getBoundDataSourceNameByAttributePath(r);return t.load(o,[],{loadType:a.DataSourceLoadType.Reload})}_handleError(e,t){return this._folderTreeRelatedElementConfigsRepository.delete({folderId:e.folderId}).pipe((0,v.switchMap)(()=>this.modelRequestService.handleError(t,e,this.handlerChain)))}handle(e){return(0,l.lastValueFrom)(this._copyRelatedElementConfigs(e.sourceId,e.folderId).pipe((0,v.switchMap)(()=>this.insertModel(e)),(0,v.switchMap)(()=>this._copyRights(e)),(0,v.switchMap)(()=>this._reloadFolderDataSource(e)),(0,v.catchError)(t=>this._handleError(e,t))),{defaultValue:null})}};y.\u0275fac=function(e){return new(e||y)(s.\u0275\u0275inject(s.Injector))},y.\u0275prov=s.\u0275\u0275defineInjectable({token:y,factory:y.\u0275fac}),y=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeCopyFolderDataHandler",requestType:"crt.CopyFolderDataRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],y);let A=class extends a.BaseRequestHandler{constructor(e){super(),this._modelRequestService=e.get(f),this._folderManagerService=e.get(F)}_createDeleteFolderRequest(e){return(0,u.isOldSourceSchema)(e.sourceSchemaName)?this._createDeleteOldFolderRequest(e):this._createDeleteNewFolderRequest(e)}_createDeleteOldFolderRequest(e){return this._folderManagerService.deleteFolders({sourceSchemaName:e.sourceSchemaName,folderIds:[e.folderId]}).pipe((0,l.map)(t=>({success:t.success,errorInfo:t.errorInfo?.message,rowsAffected:t.success?1:0})))}_createDeleteNewFolderRequest(e){return e.$context.delete(e.dataSourceName,[{type:a.ModelParameterType.PrimaryColumnValue,value:e.folderId}])}handle(e){const t=this._createDeleteFolderRequest(e);return this._modelRequestService.handle(t,e)}};A=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeDeleteFolderDataHandler",requestType:"crt.DeleteFolderDataRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],A);let I=class extends a.BaseRequestHandler{constructor(e){super(),this._folderTreeUserProfileService=e}_isNeedSaveToProfile(e){const t=e.$context,{expandedItemsAttrName:r}=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName);let o=t.attributes[r];o=this._prepareExpandedItems(o);const n=this._prepareExpandedItems(e.expandedItems);return!(0,N.isEqual)(o,n)}_prepareExpandedItems(e){return e?.filter(t=>![u.VIRTUAL_ROOT_NODE_ID,u.VIRTUAL_FAVORITE_ROOT_NODE_ID].includes(t))||[]}handle(e){var t=this;return(0,m.Z)(function*(){t._isNeedSaveToProfile(e)&&(yield t._folderTreeUserProfileService.setFolderTreeExpandedItems(e.folderTreeName,e.expandedItems));const r=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),o=e.$context;return(0,l.firstValueFrom)(o.setValue({[r.expandedItemsAttrName]:e.expandedItems}))})()}};I=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeExpandedItemsHandler",requestType:"crt.FolderTreeExpandedItemsRequest"}),(0,d.__metadata)("design:paramtypes",[u.FolderTreeUserProfileService])],I);let R=class extends a.BaseRequestHandler{constructor(e){super(),this._modelRequestService=e.get(f)}handle(e){var t=this;return(0,m.Z)(function*(){const o=(yield(0,l.lastValueFrom)(C.Model.create(e.sourceSchemaName))).update({Name:e.folderName},[{type:a.ModelParameterType.PrimaryColumnValue,value:e.folderId}]);return t._modelRequestService.handle(o,e,t.handlerChain)})()}};R=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeRenameHandler",requestType:"crt.FolderTreeRenameRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],R);let M=class extends a.BaseRequestHandler{_getEntitySchemaUId(e){return(0,l.lastValueFrom)(this._entitySchemaService.getEntitySchemaByName(e).pipe((0,v.map)(t=>t.entitySchema.uId)))}_insertFolder(e,t){var r=this;return(0,m.Z)(function*(){let o;if((0,u.isOldSourceSchema)(e.sourceSchemaName)){const n=yield r._getEntitySchemaUId(e.sourceSchemaName);o={FolderId:e.id,FolderEntitySchemaUId:n}}else o={FolderTree:e.id,EntitySchemaName:e.rootSchemaName};return(0,l.lastValueFrom)(t.insert(o))})()}_deleteFolder(e,t){return(0,l.lastValueFrom)(t.delete([{type:a.ModelParameterType.PrimaryColumnValue,value:e.favoriteId}]))}constructor(e){super(),this._entitySchemaService=e}handle(e){var t=this;return(0,m.Z)(function*(){const r=(0,u.isOldSourceSchema)(e.sourceSchemaName)?u.OLD_FOLDER_TREE_FAVORITE_SCHEMA_NAME:u.DEFAULT_FOLDER_TREE_FAVORITE_SCHEMA_NAME,o=yield(0,l.lastValueFrom)(C.Model.create(r));return e.status?t._insertFolder(e,o):t._deleteFolder(e,o)})()}};M=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.ToggleFolderFavoriteHandler",requestType:"crt.ToggleFolderFavoriteRequest"}),(0,d.__metadata)("design:paramtypes",[p.EntitySchemaService])],M);let D=class extends a.BaseRequestHandler{constructor(e){super(),this._modelRequestService=e.get(f)}handle(e){var t=this;return(0,m.Z)(function*(){const r=yield(0,l.lastValueFrom)(C.Model.create(e.sourceSchemaName));let o={};(0,u.isOldSourceSchema)(e.sourceSchemaName)?o={SearchData:e.filterData}:o={FilterData:e.filterData};const n=r.update(o,[{type:a.ModelParameterType.PrimaryColumnValue,value:e.folderId}]);return t._modelRequestService.handle(n,e)})()}};D=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeUpdateFiltersHandler",requestType:"crt.FolderTreeUpdateFiltersRequest"}),(0,d.__metadata)("design:paramtypes",[s.Injector])],D);let O=class extends a.BaseRequestHandler{constructor(e){super(),this._folderTreeUserProfileService=e}_getIsIsFolderTreeVisible(e,t){return(0,m.Z)(function*(){const r=e.$context;let o=e.visible;if(e.togglePanel){let n=yield r[t];n=(0,N.isNil)(n)?!1:n,o=!n}return o})()}_setFolderTreeVisible(e,t,r,o,n){var h=this;return(0,m.Z)(function*(){h._folderTreeUserProfileService.setFolderTreeVisibleState(o,t);const E=e.setValue({[r]:t});if(t){const H=h._reloadDataSource(e,n);return(0,l.lastValueFrom)(E.pipe(H),{defaultValue:null})}return(0,l.lastValueFrom)(E,{defaultValue:null})})()}_reloadDataSource(e,t){const r=e.getBoundDataSourceNameByAttributePath(t);return(0,v.mergeMap)(()=>e.load(r,[],{loadType:a.DataSourceLoadType.Reload}))}handle(e){var t=this;return(0,m.Z)(function*(){const r=(0,p.buildFolderTreeAttributeNames)(e.folderTreeName),o=r.visibleAttrName,n=e.$context,h=yield t._getIsIsFolderTreeVisible(e,o);return t._setFolderTreeVisible(n,h,o,e.folderTreeName,r.itemsAttrName)})()}};O=(0,d.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeVisibleHandler",requestType:"crt.FolderTreeVisibleRequest"}),(0,d.__metadata)("design:paramtypes",[u.FolderTreeUserProfileService])],O);const B=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),$=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\u0429\u0435 \u0432\u0438 \u0443\u0432\u0435\u0434\u043E\u043C\u0438\u043C, \u043A\u043E\u0433\u0430\u0442\u043E \u043F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u0443\u0432\u0430\u043D\u0435\u0442\u043E \u043F\u0440\u0438\u043A\u043B\u044E\u0447\u0438."}}'),Z=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),W=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),k=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Wir werden Sie benachrichtigen, wenn die Umwandlung abgeschlossen ist."}}'),G=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),z=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Le notificaremos cuando se complete la conversi\xF3n."}}'),K=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Nous vous informerons lorsque la conversion sera termin\xE9e."}}'),Y=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),Q=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\xC9rtes\xEDtj\xFCk \xD6nt, ha az \xE1talak\xEDt\xE1s befejez\u0151d\xF6tt."}}'),X=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),q=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Ti invieremo una notifica quando la conversione sar\xE0 completata."}}'),ee=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),te=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),re=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),oe=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ae=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Iremos notific\xE1-lo quando a convers\xE3o for conclu\xEDda."}}'),ne=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),le=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),se=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\u041C\u044B \u0441\u043E\u043E\u0431\u0449\u0438\u043C \u0432\u0430\u043C, \u043A\u043E\u0433\u0434\u0430 \u043A\u043E\u043D\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044F \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430."}}'),de=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ie=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ce=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),me=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ue=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\u041C\u0438 \u043F\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C\u043E \u0432\u0430\u043C, \u043A\u043E\u043B\u0438 \u043A\u043E\u043D\u0432\u0435\u0440\u0442\u0430\u0446\u0456\u044E \u0431\u0443\u0434\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043E."}}'),pe=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),he=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ve={"hr-HR":B,"bg-BG":$,"ar-SA":Z,"cs-CZ":W,"de-DE":k,"en-US":G,"es-ES":z,"fr-FR":K,"he-IL":Y,"hu-HU":Q,"id-ID":X,"it-IT":q,"ja-JP":ee,"ko-KR":te,"nl-NL":re,"pl-PL":oe,"pt-BR":ae,"pt-PT":ne,"ro-RO":le,"ru-RU":se,"sq-AL":de,"sv-SE":ie,"th-TH":ce,"tr-TR":me,"uk-UA":ue,"vi-VN":pe,"zh-CN":he};let T=class{};T.\u0275fac=function(e){return new(e||T)},T.\u0275mod=s.\u0275\u0275defineNgModule({type:T}),T.\u0275inj=s.\u0275\u0275defineInjector({providers:[F,u.FolderTreeUserProfileService],imports:[j.CommonModule,V.CrtLibTranslateModule.forRoot({i18n:ve})]}),T=(0,d.__decorate)([(0,a.CrtModule)({requestHandlers:[g,_,A,I,R,M,D,O,y,S]})],T),function(){(typeof ngJitMode>"u"||ngJitMode)&&s.\u0275\u0275setNgModuleScope(T,{imports:[j.CommonModule,V.CrtLibTranslateModule]})}()}}]);
